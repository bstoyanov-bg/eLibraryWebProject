@using LibraryManagementSystem.Web.Areas.Admin.Services.Interfaces
@using LibraryManagementSystem.Web.Areas.Admin.ViewModels.User
@model AllUsersQueryModel

@inject IUserService userService;

@{
    int activeAdminsCount = await this.userService.GetCountOfActiveAdminsAsync();
}

@{
    ViewBag.Title = "All Users";
}

@* Delete Modal *@
<div class="modal fade" id="confirmationModalDelete" tabindex="-1" aria-labelledby="confirmationModalDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabelAll">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this user? This action is irreversible!<br /><br />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="confirmNoBtnDelete" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" id="confirmYesBtnDelete">Yes</button>
            </div>
        </div>
    </div>
</div>

@* Make Admin Modal *@
<div class="modal fade" id="confirmationModalMakeAdmin" tabindex="-1" aria-labelledby="confirmationModalMakeAdminLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabelAll">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to make this user an admin?<br /><br />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="confirmNoBtnMake" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" id="confirmYesBtnMake">Yes</button>
            </div>
        </div>
    </div>
</div>

@* Demote Admin Modal *@
<div class="modal fade" id="confirmationModalDemoteAdmin" tabindex="-1" aria-labelledby="confirmationModalDemoteAdminLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabelAll">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to demote this user from admin?<br /><br />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="confirmNoBtnDemote" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" id="confirmYesBtnDemote">Yes</button>
            </div>
        </div>
    </div>
</div>


<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <h2 class="text-center">@ViewBag.Title</h2>
    <hr />
    <br />
    <br />
    <form method="get">
        <div class="row">
            <div class="form-group col-md-2">
                <label asp-for="UsersPerPage"></label>
                <select asp-for="UsersPerPage" class="form-control">
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                </select>
            </div>
            <div class="form-group col-md-3">
                <label asp-for="SearchString"></label>
                <input asp-for="SearchString" class="form-control" placeholder="">
            </div>
            <div class="form-group col-md-3">
                <label asp-for="UserSorting"></label>
                <select asp-for="UserSorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">By Name (Ascending)</option>
                    <option value="3">By Name (Descending)</option>
                </select>
            </div>
            <div class="form-group col-md-1">
                <input type="submit" value="Search" class="btn btn-primary mt-3" />
            </div>
        </div>
        <br />
        <br />
    </form>

    <div class="row mb-5">
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            @{
                var previousPage = Model.CurrentPage - 1;
                if (previousPage < 1)
                {
                    previousPage = 1;
                }

                int maxPage = (int)Math.Ceiling((double)Model.TotalUsers / Model.UsersPerPage);
            }
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-area="Admin"
               asp-controller="User"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.UserSorting)"><< Previous Page</a>
        </div>
        @{
            bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage || !Model.Users.Any();
        }
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-primary @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
               asp-area="Admin"
               asp-controller="User"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.UserSorting)">Next Page >></a>
        </div>
    </div>


    @if (!Model.Users.Any())
    {
        <h2 class="text-center">No users found by the given criteria!</h2>
        <br />
    }
    <div class="row">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th style="text-align: center; vertical-align: middle;"><label>Email</label></th>
                    <th style="text-align: center; vertical-align: middle;"><label>UserName</label></th>
                    <th style="text-align: center; vertical-align: middle;"><label>Full Name</label></th>
                    <th style="text-align: center; vertical-align: middle;"><label>City</label></th>
                    <th style="text-align: center; vertical-align: middle;"><label>Phone Number</label></th>
                    <th style="text-align: center; vertical-align: middle;"><label>Is Admin</label></th>
                    <th style="text-align: center; vertical-align: middle;"><label>Actions</label></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr>
                        <td style="text-align: center; vertical-align: middle;"><label>@user.Email</label></td>
                        <td style="text-align: center; vertical-align: middle;"><label>@user.UserName</label></td>
                        <td style="text-align: center; vertical-align: middle;"><label>@user.FullName</label></td>
                        <td style="text-align: center; vertical-align: middle;"><label>@user.City</label></td>
                        <td style="text-align: center; vertical-align: middle;"><label>@user.PhoneNumber</label></td>
                        <td style="text-align: center; vertical-align: middle;">
                            @if (!await this.userService.isUserAdmin(user.Id))
                            {
                                <label>✔</label>
                            }
                        </td>
                        <td style="text-align: center; vertical-align: middle; white-space: nowrap;">
                            <!-- Delete Button with Modal -->
                            <button type="button" class="btn btn-danger deleteUserBtn" data-user-id="@user.Id" data-bs-toggle="modal" data-bs-target="#confirmationModalDelete">
                                Delete
                            </button>

                            @if (await this.userService.isUserAdmin(user.Id))
                            {
                                <!-- Make Admin Button with Modal -->
                                <button type="button" class="btn btn-success makeAdminBtn" data-user-id="@user.Id" data-bs-toggle="modal" data-bs-target="#confirmationModalMakeAdmin" style="margin-left: 5px;">
                                    Make Admin
                                </button>
                            }
                            else
                            {
                                <!-- The system cannot exist without Admin -->
                                @if (activeAdminsCount > 1)
                                {
                                    <!-- Demote Admin Button with Modal -->
                                    <button type="button" class="btn btn-warning demoteAdminBtn" data-user-id="@user.Id" data-bs-toggle="modal" data-bs-target="#confirmationModalDemoteAdmin" style="margin-left: 5px;">
                                        Demote Admin
                                    </button>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div style="height: 40px;"></div>

    <button onclick="topFunction()" id="backToTopBtn" title="Go to top" style="display: none;">Back to Top</button>

    <div style="height: 80px;"></div>

    @Html.AntiForgeryToken()

    @section Scripts {
        <script>
            $(document).ready(function () {
                // Get Verification Token
                var token = $('input[name="__RequestVerificationToken"]').val();

                // Handle the click event of the "Delete" button in the confirmation modal
                $('.deleteUserBtn').click(function () {
                    var userId = $(this).data('user-id');
                    $('#confirmYesBtnDelete').data('user-id', userId);
                });

                // Handle the click event of the "Make Admin" button in the confirmation modal
                $('.makeAdminBtn').click(function () {
                    var userId = $(this).data('user-id');
                    $('#confirmYesBtnMake').data('user-id', userId);
                });

                // Handle the click event of the "Demote Admin" button in the confirmation modal
                $('.demoteAdminBtn').click(function () {
                    var userId = $(this).data('user-id');
                    $('#confirmYesBtnDemote').data('user-id', userId);
                });

                // Handle the click event of the confirmation button in the "Make Admin" modal
                $('#confirmYesBtnMake').click(function () {
                    var userId = $(this).data('user-id');

                    // Perform a POST request to make the user admin
                    $.ajax({
                        url: '@Url.Action("PromoteAdmin", "User", new { area = "Admin" })' + '?id=' + userId,
                        type: 'POST',
                        headers: {
                            RequestVerificationToken: token
                        },
                        data: { userId: userId },
                        success: function (response) {
                            console.log('User made admin successfully');
                            window.location.href = '@Url.Action("All", "User", new { area = "Admin" })';
                        },
                        error: function (xhr, status, error) {
                            console.error('Error making the user admin:', error);
                            $('#confirmationModalMakeAdmin').modal('hide');
                        }
                    });
                });

                // Handle the click event of the confirmation button in the "Demote Admin" modal
                $('#confirmYesBtnDemote').click(function () {
                    var userId = $(this).data('user-id');

                    // Perform a POST request to demote the user
                    $.ajax({
                        url: '@Url.Action("DemoteAdmin", "User", new { area = "Admin" })' + '?id=' + userId,
                        type: 'POST',
                        headers: {
                            RequestVerificationToken: token
                        },
                        data: { userId: userId },
                        success: function (response) {
                            console.log('User is not admin anymore');
                            window.location.href = '@Url.Action("All", "User", new { area = "Admin" })';
                        },
                        error: function (xhr, status, error) {
                            console.error('Error with demoting admin:', error);
                            $('#confirmationModalMakeAdmin').modal('hide');
                        }
                    });
                });

                // Handle the click event of the confirmation button in the "Delete" modal
                $('#confirmYesBtnDelete').click(function () {
                    var userId = $(this).data('user-id');

                    // Perform a POST request to delete the user
                    $.ajax({
                        url: '@Url.Action("Delete", "User", new { area = "Admin" })' + '?id=' + userId,
                        type: 'POST',
                        headers: {
                            RequestVerificationToken: token
                        },
                        data: { userId: userId },
                        success: function (response) {
                            console.log('User deleted successfully');
                            window.location.href = '@Url.Action("All", "User", new { area = "Admin" })';
                        },
                        error: function (xhr, status, error) {
                            console.error('Error deleting the user:', error);
                            $('#confirmationModalDelete').modal('hide');
                        }
                    });
                });
            });

            @* Script for Back to top button *@
                                                            var button = document.getElementById("backToTopBtn");

            window.onscroll = function () { scrollFunction() };

            function scrollFunction() {
                if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {
                    button.style.display = "block";
                } else {
                    button.style.display = "none";
                }
            }

            function topFunction() {
                document.documentElement.scrollTop = 0;
            }
        </script>
    }
</body>
</html>
