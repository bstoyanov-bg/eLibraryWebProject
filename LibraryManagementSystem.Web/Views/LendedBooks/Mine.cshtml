@using LibraryManagementSystem.Services.Data
@using LibraryManagementSystem.Services.Data.Interfaces
@using LibraryManagementSystem.Web.Infrastructure.Extensions
@using static LibraryManagementSystem.Common.UserRoleNames;
@model IEnumerable<MyBooksViewModel>

@inject ILendedBooksService LendedBooksService

@{
    var countOfActiveUserBooks = await this.LendedBooksService.GetCountOfActiveBooksForUserAsync(User.GetId()!.ToString());
}

@{
    ViewBag.Title = "My Books";
}

@* PopUp window (Modal) *@
<div class="modal fade" id="confirmationModalAll" tabindex="-1" aria-labelledby="ModalLabelAll" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabelAll">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Do you want to return All Books in your collection?<br /><br />
                <strong>Note: </strong>You can give rating to each one of the books that you have lended in the Details page of the current Book!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="confirmNoBtnAll" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" id="confirmYesBtnAll">Yes</button>
            </div>
        </div>
    </div>
</div>

<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<br />
<br />

@if (!Model.Any())
{
    <h2 class="text-center">There are no books in your collection.</h2>
    <br />
}

@if (this.User.IsInRole(UserRole))
{
    if (countOfActiveUserBooks > 1)
    {
        <form id="returnForm" class="ml-2">
            <button type="button" class="btn btn-danger" id="returnAllBooksBtn">Return All Books</button>
        </form>
    }
    <br />
    <br />
}

@Html.AntiForgeryToken()

<script>
    @* Script for Returning Books with AJAX *@
    $(document).ready(function () {
        // Get Verification Token !!!
        var token = $('input[name="__RequestVerificationToken"]').val();

        // 0. Handle the click event of the "Return Book" button
        $('#returnAllBooksBtn').click(function () {
            // Show the confirmation modal
            $('#confirmationModalAll').modal('show');
        });


        // 1. Handle the click event of the "YES" button in the confirmation modal
        $('#confirmYesBtnAll').click(function () {

            // Perform a POST request to the "ReturnAll" action in the "LendedBooks" controller
            $.ajax({
                url: '@Url.Action("ReturnAll", "LendedBooks")',
                type: 'POST',
                headers: {
                    RequestVerificationToken: token
                },
                success: function (response) {
                    console.log('Books returned successfully');
                    // Redirect to BooksController/All action
                    window.location.href = '@Url.Action("Index", "Home")';
                },
                error: function (xhr, status, error) {
                    console.error('Error returning books:', error);
                    // Redirect to BooksController/All action
                        window.location.href = '@Url.Action("Index", "Home")';
                }
            });
        });

        // 2. Handle the click event of the "No" button in the confirmation modal
        $('#confirmNoBtnAll').click(function () {
            // Close the confirmation modal without performing any action
            $('#confirmationModalAll').modal('hide');
        });

        // 3. Handle the modal close event
        $('#confirmationModalAll').on('hidden.bs.modal', function () {
            // Close the confirmation modal without performing any action
            $('#confirmationModalAll').modal('hide');
        });
    });
</script>

<div class="row">
    @foreach (MyBooksViewModel book in Model)
    {
        <partial name="_BookPartial" model="@book" />
    }
</div>
