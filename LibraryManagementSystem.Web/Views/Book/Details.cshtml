@using LibraryManagementSystem.Services.Data.Interfaces
@using LibraryManagementSystem.Web.Infrastructure.Extensions
@using static LibraryManagementSystem.Common.UserRoleNames;
@model BookDetailsViewModel

@inject ILendedBookService LendedBookService
@inject IRatingService RatingService
@inject IBookService BookService
@inject IEditionService EditionService

@{
    bool isBookActiveForUser = await LendedBookService.IsBookActiveInUserCollectionAsync(User.GetId()!.ToString(), Model.Id);
    bool bookExistInUserCollection = await LendedBookService.BookExistsInUserHistoryCollectionAsync(User.GetId()!.ToString(), Model.Id);
    int howManyPeopleAreReading = await LendedBookService.GetCountOfPeopleReadingTheBookAsync(Model.Id);
    bool didUserGiveRating = await RatingService.HasUserGaveRatingToBookAsync(User.GetId()!.ToString(), Model.Id);
    bool doesBookHaveUploadedFile = await BookService.DoesBookHaveUploadedFileAsync(Model.Id);
}

@{
    ViewBag.Title = "Book Details";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<head>
    @* Styles for rating elements *@
    <style>
        .fa-star {
            font-size: 1.5em;
        }

        .gold-star {
            color: gold;
        }

        .rating-value {
            font-size: 1.5em;
            margin-left: 10px;
        }
    </style>
</head>

<div class="row">
    <div class="card w-100 mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3 d-flex justify-content-center align-items-center">
                    <div class="image-container text-center mb-3">
                        <img class="d-block mb-3" style="max-width: 200px; height: auto;" src="~/@Model.ImageFilePath" alt="BookCover-img">
                        <br />
                        <span class="rating-stars">
                            @for (int i = 0; i < Math.Floor(Model.Rating); i++)
                            {
                                <i class="fas fa-star fa-2x gold-star"></i>
                            }
                        </span>
                        <span class="rating-value">
                            @if (Model.Rating != 0)
                            {
                                @Model.Rating
                            }
                        </span>
                    </div>
                </div>
                <div class="col-md-8">
                    <h3 class="card-title text-center">Title: @Model.Title</h3>
                    <br />
                    <p class="mb-0"><span class="fw-bold">Author: </span>@Html.ActionLink(Model.AuthorName, "Details", "Author", new { id = Model.AuthorId }, new { style = "text-decoration: none;" })</p>
                    <p class="mb-0"><span class="fw-bold">Description: </span>@Model.Description</p>
                    <p class="mb-0"><span class="fw-bold">Category: </span>@Model.CategoryName</p>
                    <p class="mb-0"><span class="fw-bold">Year published: </span>@Model.YearPublished</p>
                    <p class="mb-0"><span class="fw-bold">Publisher: </span>@Model.Publisher</p>
                    <p class="mb-0"><span class="fw-bold">ISBN: </span>@Model.ISBN</p>
                    <hr>
                    <p class="mb-0">
                        <span class="fw-bold"></span>@Model.PeopleReading
                        @if (howManyPeopleAreReading == 1)
                        {
                            <span>person is currently reading the book.</span>
                        }
                        else
                        {
                            <span>people are currently reading the book.</span>
                        }
                    </p>
                </div>
                <div class="col-md-3 d-flex justify-content-center">
                    @if (this.User.IsInRole(UserRole) && !isBookActiveForUser)
                    {
                        @* User does not have this BOOK in his collection and he can Add it!*@
                        <form asp-action="GetBook" asp-controller="LendedBook" method="post">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-success">Get Book</button>
                        </form>
                    }
                    else
                    {
                        @if (doesBookHaveUploadedFile)
                        {
                            @* If the User has this BOOK in his collection he can Download or View the file in browser!*@
                            <div style="display: flex; gap: 10px;">
                                <div>
                                    <form asp-action="DownloadFile" asp-controller="File" method="get">
                                        <input type="hidden" name="id" value="@Model.Id" />
                                        <input type="hidden" name="entityType" value="Book" />
                                        <button type="submit" class="btn btn-info">Download</button>
                                    </form>
                                </div>

                                <div>
                                    <form asp-action="GetTextFileContent" asp-controller="File" method="get">
                                        <input type="hidden" name="id" value="@Model.Id" />
                                        <input type="hidden" name="entityType" value="Book" />
                                        <button type="submit" class="btn btn-info">View File</button>
                                    </form>
                                </div>
                            </div>
                        }
                    }

                    @if (this.User.IsInRole(UserRole) && bookExistInUserCollection && !didUserGiveRating)
                    {
                        @* User had this BOOK in collection but didn't rate it first time!*@
                        <div style="margin-left: 20px;">
                            <form asp-action="Give" asp-controller="Rating" method="get">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <button type="submit" class="btn btn-warning">Give Rating</button>
                            </form>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>

    <div class="comments mb-5">
        <p>
            <button id="loadCommentsButton" class="btn btn-primary" type="button" data-toggle="collapse" data-book-id="@Model.Id" data-bs-toggle="collapse"
                    data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                See comments
            </button>
        </p>
        <div style="min-height: 100px;">
            <div class="collapse" id="collapseExample">
                <div class="card card-body">
                    <h3>Comments and ratings:</h3>
                    <br />
                    <div class="comments-content">
                        @foreach (var comment in Model.Comments)
                        {
                            <partial name="_CommentsPartial" model="@Model.Id" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <h2>Book Editions:</h2>
    @if (Model.Editions.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th style="text-align: center; vertical-align: middle;">Version</th>
                    <th style="text-align: center; vertical-align: middle;">Publisher</th>
                    <th style="text-align: center; vertical-align: middle;">Year of Edition</th>
                    @if (isBookActiveForUser)
                    {
                        <th style="text-align: center; vertical-align: middle;">Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var edition in Model.Editions)
                {
                    <tr>
                        <td style="text-align: center; vertical-align: middle;">@edition.Version</td>
                        <td style="text-align: center; vertical-align: middle;">@edition.Publisher</td>
                        <td style="text-align: center; vertical-align: middle;">@edition.EditionYear</td>
                        <td style="text-align: center; vertical-align: middle; white-space: nowrap;">
                            @if (this.User.IsInRole(AdminRole))
                            {
                                <a href="@Url.Action("Edit", "Edition", new { id = edition.Id })" class="btn btn-warning">Edit</a>
                                <a href="@Url.Action("Delete", "Edition", new { id = edition.Id })" class="btn btn-danger">Delete</a>

                                if(await this.EditionService.DoesEditionHaveUploadedFileAsync(edition.Id))
                                {
                                    <form asp-action="DownloadFile" asp-controller="File" method="get" style="display: inline;">
                                        <input type="hidden" name="id" value="@edition.Id" />
                                        <input type="hidden" name="entityType" value="Edition" />
                                        <button type="submit" class="btn btn-info">Download</button>
                                    </form>

                                    <form asp-action="GetTextFileContent" asp-controller="File" method="get" style="display: inline;">
                                        <input type="hidden" name="id" value="@edition.Id" />
                                        <input type="hidden" name="entityType" value="Edition" />
                                        <button type="submit" class="btn btn-info">View File</button>
                                    </form>
                                }
                            }
                            else if (isBookActiveForUser)
                            {
                                @if (await this.EditionService.DoesEditionHaveUploadedFileAsync(edition.Id))
                                {
                                    @* If the User has this EDITION in his collection he can Download or View the file in browser*@
                                    <form asp-action="DownloadFile" asp-controller="File" method="get" style="display: inline;">
                                        <input type="hidden" name="id" value="@edition.Id" />
                                        <input type="hidden" name="entityType" value="Edition" />
                                        <button type="submit" class="btn btn-info">Download</button>
                                    </form>

                                    <form asp-action="GetTextFileContent" asp-controller="File" method="get" style="display: inline;">
                                        <input type="hidden" name="id" value="@edition.Id" />
                                        <input type="hidden" name="entityType" value="Edition" />
                                        <button type="submit" class="btn btn-info">View File</button>
                                    </form>
                                }
                            }
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No editions found for this book.</p>
    }
</div>

<div style="height: 100px;"></div>

@Html.AntiForgeryToken()

@section Scripts {
    <script>
        @* Script AJAX request to load comments *@
            $(document).ready(function () {
                var token = $('input[name="__RequestVerificationToken"]').val();

                $('#loadCommentsButton').click(function () {
                    var bookId = $(this).data('book-id');

                    // Load comments via AJAX
                    $.ajax({
                        url: '/Rating/GetComments',
                        type: 'GET',
                        headers: {
                            'RequestVerificationToken': token
                        },
                        data: { id: bookId },
                        success: function (data) {
                            // Update comments content with the response
                            $('.comments-content').html(data);
                            // Show comments content
                            $('.comments-content').show();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error loading comments:', error);
                        }
                    });
                });
            });
    </script>

    <partial name="_ValidationScriptsPartial" />
}
