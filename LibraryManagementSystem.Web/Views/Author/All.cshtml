@using static LibraryManagementSystem.Common.UserRoleNames;

@model AllAuthorsQueryModel

@{
    ViewBag.Title = "All Authors";
}

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <h2 class="text-center">@ViewBag.Title</h2>
    <hr />
    <br />
    <br />
    <form method="get">
        <div class="row">
            <div class="form-group col-md-2">
                <label asp-for="AuthorsPerPage"></label>
                <select asp-for="AuthorsPerPage" class="form-control">
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                </select>
            </div>
            <div class="form-group col-md-3">
                <label asp-for="SearchString"></label>
                <input asp-for="SearchString" class="form-control" placeholder="">
            </div>
            <div class="form-group col-md-3">
                <div class="form-group">
                    <label asp-for="AuthorSorting"></label>
                    <select asp-for="AuthorSorting" class="form-control">
                        <option value="0">Newest</option>
                        <option value="1">Oldest</option>
                        <option value="2">Name (Ascending)</option>
                        <option value="3">Name (Descending)</option>
                        <option value="4">Nationality (Ascending)</option>
                        <option value="5">Nationality (Descending)</option>
                    </select>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group mt-3 p-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        </div>
        <br />
        <br />
    </form>
    <div class="row mb-5">
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            @{
                var previousPage = Model.CurrentPage - 1;
                if (previousPage < 1)
                {
                    previousPage = 1;
                }

                int maxPage = (int)Math.Ceiling((double)Model.TotalAuthors / Model.AuthorsPerPage);
            }
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Author"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.AuthorSorting)"><< Previous Page</a>
        </div>
        @{
            bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage || !Model.Authors.Any();
        }
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-primary @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Author"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.AuthorSorting)">Next Page >></a>
        </div>
    </div>


    @if (!Model.Authors.Any())
    {
        <h2 class="text-center">No authors found by the given criteria!</h2>
        <br />
    }
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th style="text-align: center; vertical-align: middle;">Author Name</th>
                    <th style="text-align: center; vertical-align: middle;">Nationality</th>
                    <th style="text-align: center; vertical-align: middle;">Books in collection</th>
                    @if (User.Identity?.IsAuthenticated ?? false)
                    {
                        <th style="text-align: center; vertical-align: middle;">Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var author in Model.Authors)
                {
                    <tr>
                        <td style="width: 200px;">
                            <div class="enlarge-image" onmouseover="enlargeImage(this)" onmouseout="resetImageSize(this)">
                                <img class="d-block w-50" style="max-width: 100%; height: auto;" src="~/@author.ImageFilePath" alt="Author-img">
                            </div>
                        </td>
                        <td style="text-align: center; vertical-align: middle;">@author.FirstName @author.LastName</td>
                        <td style="text-align: center; vertical-align: middle;">@author.Nationality</td>
                        <td style="text-align: center; vertical-align: middle;">@author.BooksCount</td>
                        <td style="text-align: center; vertical-align: middle; white-space: nowrap;">
                            @if (this.User.IsInRole(AdminRole))
                            {
                                <a href="@Url.Action("Edit", "Author", new { id = author.Id })" class="btn btn-warning">Edit</a>
                                <a href="@Url.Action("Details", "Author", new { id = author.Id })" class="btn btn-primary">Details</a>
                                <a href="@Url.Action("Delete", "Author", new { id = author.Id })" class="btn btn-danger">Delete</a>
                            }
                            else if (this.User.IsInRole(UserRole))
                            {
                                <a href="@Url.Action("Details", "Author", new { id = author.Id })" class="btn btn-primary">Details</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div style="height: 40px;"></div>

    <button onclick="topFunction()" id="backToTopBtn" title="Go to top" style="display: none;">Back to Top</button>

    <div style="height: 80px;"></div>

    <script>
    @* Script for Back to top button *@
        var button = document.getElementById("backToTopBtn");

        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {
                button.style.display = "block";
            } else {
                button.style.display = "none";
            }
        }

        function topFunction() {
            document.documentElement.scrollTop = 0;
        }

        @* Script for image enlargement *@
            function enlargeImage(element) {
                element.style.transition = 'transform 0.3s';
                element.style.transform = 'scale(2)';
                element.style.position = 'relative'; // Image has a position other than 'static'
                element.style.zIndex = '999'; // Higher z-index value to bring the enlarged image to the top
            }

        function resetImageSize(element) {
            element.style.transform = 'scale(1)';
            element.style.zIndex = 'auto';
        }
    </script>

</body>
</html>
